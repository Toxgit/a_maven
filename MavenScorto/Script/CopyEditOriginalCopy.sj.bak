//USEUNIT MainMenuHelper2
//USEUNIT NewStrategyHelper
//USEUNIT TestLogging
//USEUNIT VariablesHelper

function  copyEditCopy()
{
//
//initialization
  var menu = new MainMenuControl();
  var variables = new Variables.Variables();
  
//precondition
  BeginTestTransaction("User can change the original varialbe and it will not affect the already made copy, but all new copies made afterwards will contain changes");
  createNewStr();
  menu.toVariables();
//test body
  Log.Message("Создаем две переменные");
  for(var i=0; i<ODT.Data.Variables.VariableCount; i++)//создаем переменные
  {
    var item = ODT.Data.Variables.Variables(i).Value;
    if (item.options == "copy")
    {
      createVariableWithCostomProperty(item);
    }
  }
  for(var i=0; i<ODT.Data.Variables.VariableCount; i++)//копируем и редактируем оригиралы
  {
    var item = ODT.Data.Variables.Variables(i).Value;
    if (item.options == "edit original")
    {
      clickRowByName(item.name);
      variables.copy();
      clickRowByName(item.name);
      editVariableWithCostomProperty(item);
    }
  }
  for(var i=0; i<ODT.Data.Variables.VariableCount; i++)//проверка скопированных переменных(после редактирования оригинала не должны изменится)
  {
    var item = ODT.Data.Variables.Variables(i).Value;
    if (item.options == "checking copy")
    {
      logStep("Iteration "+i);
      verifyVariableWithCostomProperty(item);
    }
   }
  for(var i=0; i<ODT.Data.Variables.VariableCount; i++)//теперь берем отредактированный оригинал и копируем, проверяем копии В ОДНОМ ЦИКЛЕ
  {
    var item = ODT.Data.Variables.Variables(i).Value;
    if (item.options == "edit original")
    {
      clickRowByName(item.newName);
      variables.copy();
    }
    if (item.options == "checking edit original")
    {
      logStep("Iteration "+i);
      verifyVariableWithCostomProperty(item);
    }
  }
//postcondition
  Log.PopLogFolder()
  variables.ok();
  closeOneStr();
  EndTestTransaction(); 
}